---
g_template_ops_tools:
  name: Template Operations Tools
  zdiscoveryrules:
  - name: disc.ops.runner
    key: disc.ops.runner
    lifetime: 1
    description: "Dynamically register operations runner items"

  zitemprototypes:
  - discoveryrule_key: disc.ops.runner
    name: "{% raw %}Exit code of ops-runner[{{ '{#' }}OSO_COMMAND}]{% endraw %}"
    key: "{% raw %}disc.ops.runner.command.exitcode[{{ '{#' }}OSO_COMMAND}]{% endraw %}"
    value_type: int
    description: "The exit code of the command run from ops-runner"
    applications:
    - Ops Runner
  - discoveryrule_key: disc.ops.runner
    name: "{% raw %}Timeout of ops-runner[{{ '{#' }}OSO_COMMAND}]{% endraw %}"
    key: "{% raw %}disc.ops.runner.command.timeout[{{ '{#' }}OSO_COMMAND}]{% endraw %}"
    value_type: int
    description: "The number of seconds waited before timing out"
    applications:
    - Ops Runner


  ztriggerprototypes:
  - name: "{% raw %}ops-runner[{{ '{#' }}OSO_COMMAND}]: non-zero exit code on {HOST.NAME}{% endraw %}"
    expression: "{% raw %}{Template Operations Tools:disc.ops.runner.command.exitcode[{{ '{#' }}OSO_COMMAND}].last()}<>0{% endraw %}"
    url: "https://github.com/openshift/ops-sop/blob/master/v3/alerts/check_ops_runner_command.asciidoc"
    priority: average
  - name: "{% raw %}ops-runner[{{ '{#' }}OSO_COMMAND}]: timeout on {HOST.NAME}{% endraw %}"
    expression: "{% raw %}{Template Operations Tools:disc.ops.runner.command.timeout[{{ '{#' }}OSO_COMMAND}].last()}<>0{% endraw %}"
    url: "https://github.com/openshift/ops-sop/blob/master/v3/alerts/check_ops_runner_command.asciidoc"
    priority: average


  zactions:
  - name: "Remote command for [Heal] triggers"
    status: enabled
    escalation_time: 60
    conditions_filter:
      calculation_type: "and/or"
      conditions:
      - conditiontype: maintenance status
        operator: not in
      - conditiontype: trigger name
        operator: like
        value: "[Heal]"
      - conditiontype: trigger value
        operator: "="
        value: PROBLEM
    operations:
    - esc_step_from: 1
      esc_step_to: 1
      esc_period: 0
      operationtype: remote command
      opcommand:
        command: "ssh -i /etc/openshift_tools/scriptrunner_id_rsa {{ ozb_scriptrunner_user }}@{{ ozb_scriptrunner_bastion_host }} remote-healer --host \\\"{HOST.NAME}\\\" --trigger \\\"{TRIGGER.NAME}\\\" --trigger-val \\\"{TRIGGER.VALUE}\\\" >> /var/log/zabbix/zabbix_server_action.log"
        execute_on: "zabbix server"
        type: "custom script"
      target_hosts:
      - target_type: "zabbix server"
      opconditions:
      - conditiontype: "event acknowledged"
        operator: "="
        value: "not acknowledged"
