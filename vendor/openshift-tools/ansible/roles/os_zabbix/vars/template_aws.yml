---
g_template_aws:
  name: Template AWS

  zitems:
  - key: aws.ebs.snapshotter.expired_snapshots
    applications:
    - EBS Snapshotter
    value_type: int

  - key: aws.ebs.snapshotter.deleted_snapshots
    applications:
    - EBS Snapshotter
    value_type: int

  - key: aws.ebs.snapshotter.deletion_errors
    applications:
    - EBS Snapshotter
    value_type: int

  ztriggers:
  - name: "EBS Snapshot deletion failed on {HOST.NAME}"
    expression: "{Template AWS:aws.ebs.snapshotter.deletion_errors.min(#3)}>0"
    url: "https://github.com/openshift/ops-sop/blob/master/v3/alerts/check_ebs_snapshotter.asciidoc"
    priority: average

  zdiscoveryrules:
  - name: disc.aws
    key: disc.aws
    lifetime: 14
    description: "Dynamically register AWS bucket info"

  - name: disc.aws.ebs
    key: disc.aws.ebs
    lifetime: 1
    description: "Dynamically register EBS related macros"

  - name: disc.aws.ebs.snapshotter
    key: disc.aws.ebs.snapshotter
    lifetime: 1
    description: "Dynamically register EBS Snapshotter items"

  zitemprototypes:
  - discoveryrule_key: disc.aws
    name: "{% raw %}S3 bucket size (GB) [{{ '{#' }}S3_BUCKET}]{% endraw %}"
    key: "{% raw %}disc.aws.size[{{ '{#' }}S3_BUCKET}]{% endraw %}"
    value_type: int
    description: "Size of S3 bucket"
    applications:
    - AWS

  - discoveryrule_key: disc.aws
    name: "{% raw %}S3 bucket object count [{{ '{#' }}S3_BUCKET}]{% endraw %}"
    key: "{% raw %}disc.aws.objects[{{ '{#' }}S3_BUCKET}]{% endraw %}"
    value_type: int
    description: "Objects in S3 bucket"
    applications:
    - AWS

  - discoveryrule_key: disc.aws.ebs.snapshotter
    name: "{% raw %}Total snapshottable volumes [{{ '{#' }}OSO_SNAP_SCHEDULE}]{% endraw %}"
    key: "{% raw %}disc.aws.ebs.snapshotter.snapshottable_volumes[{{ '{#' }}OSO_SNAP_SCHEDULE}]{% endraw %}"
    value_type: int
    description: "Total number of snapshottable volumes"
    applications:
    - EBS Snapshotter

  - discoveryrule_key: disc.aws.ebs.snapshotter
    name: "{% raw %}Total number of snapshots created [{{ '{#' }}OSO_SNAP_SCHEDULE}]{% endraw %}"
    key: "{% raw %}disc.aws.ebs.snapshotter.snapshots_created[{{ '{#' }}OSO_SNAP_SCHEDULE}]{% endraw %}"
    value_type: int
    description: "Total number of snapshots created"
    applications:
    - EBS Snapshotter

  - discoveryrule_key: disc.aws.ebs.snapshotter
    name: "{% raw %}Total number of snapshot creation errors [{{ '{#' }}OSO_SNAP_SCHEDULE}]{% endraw %}"
    key: "{% raw %}disc.aws.ebs.snapshotter.snapshot_creation_errors[{{ '{#' }}OSO_SNAP_SCHEDULE}]{% endraw %}"
    value_type: int
    description: "Total number of snapshot creation errors"
    applications:
    - EBS Snapshotter

  - discoveryrule_key: disc.aws.ebs
    name: "{% raw %}EBS Attachment State[{{ '{#' }}OSO_EBS_VOLUME_URI}]{% endraw %}"
    key: "{% raw %}disc.aws.ebs.attach_state[{{ '{#' }}OSO_EBS_VOLUME_URI}]{% endraw %}"
    value_type: int
    description: "EBS Attachment State (stuck or not)"
    applications:
    - EBS Attachment State

  ztriggerprototypes:
  - name: "{% raw %}EBS Snapshotter[{{ '{#' }}OSO_SNAP_SCHEDULE}]: error creating ebs snapshots on {HOST.NAME}{% endraw %}"
    expression: "{% raw %}{Template AWS:disc.aws.ebs.snapshotter.snapshot_creation_errors[{{ '{#' }}OSO_SNAP_SCHEDULE}].min(#3)}>0{% endraw %}"
    url: "https://github.com/openshift/ops-sop/blob/master/v3/alerts/check_ebs_snapshotter.asciidoc"
    priority: average

  - name: "{HOST.NAME} {% raw %}EBS Attach State[{{ '{#' }}OSO_EBS_VOLUME_URI}]: EBS volume stuck attaching or detaching{% endraw %}"
    expression: "{% raw %}{Template AWS:disc.aws.ebs.attach_state[{{ '{#' }}OSO_EBS_VOLUME_URI}].last()}>0{% endraw %}"
    url: "https://github.com/openshift/ops-sop/blob/master/v3/alerts/check_ebs_stuck_attaching_detaching.asciidoc"
    priority: high
