---
g_template_docker:
  name: Template Docker
  zitems:
  - key: docker.ping
    applications:
    - Docker Daemon
    value_type: int

  - key: docker.version
    applications:
    - Docker Daemon
    value_type: string

  - key: docker.info_elapsed_ms
    applications:
    - Docker Daemon
    value_type: int

  - key: docker.memoryusage.rss
    applications:
    - Docker Daemon
    value_type: int
    units: B

  - key: docker.memoryusage.vms
    applications:
    - Docker Daemon
    value_type: int
    units: B

  - key: docker.container.dns.resolution
    applications:
    - Docker Container
    value_type: int

  - key: docker.container.existing.dns.resolution.failed
    applications:
    - Docker Container
    value_type: int

  - key: docker.storage.is_loopback
    applications:
    - Docker Storage
    value_type: int

  - key: docker.storage.data.space.total
    applications:
    - Docker Storage
    value_type: float

  - key: docker.storage.data.space.used
    applications:
    - Docker Storage
    value_type: float

  - key: docker.storage.data.space.available
    applications:
    - Docker Storage
    value_type: float

  - key: docker.storage.data.space.percent_available
    applications:
    - Docker Storage
    value_type: float

  - key: docker.storage.metadata.space.total
    applications:
    - Docker Storage
    value_type: float

  - key: docker.storage.metadata.space.used
    applications:
    - Docker Storage
    value_type: float

  - key: docker.storage.metadata.space.available
    applications:
    - Docker Storage
    value_type: float

  - key: docker.storage.metadata.space.percent_available
    applications:
    - Docker Storage
    value_type: float
  ztriggers:
  - name: "docker.ping failed on {HOST.NAME}"
    expression: "{Template Docker:docker.ping.max(#3)}<1"
    url: "https://github.com/openshift/ops-sop/blob/master/v3/alerts/check_docker_ping.asciidoc"
    priority: high

  # Re-enable for OpenShift 3.1.1 (https://bugzilla.redhat.com/show_bug.cgi?id=1292971#c6)
  - name: "docker.container.dns.resolution failed on {HOST.NAME}"
    expression: "{Template Docker:docker.container.dns.resolution.min(#3)}>0"
    url: "https://github.com/openshift/ops-sop/blob/master/v3/alerts/check_docker_dns.asciidoc"
    priority: average
    status: disabled

  - name: "docker.container.existing.dns.resolution.failed on {HOST.NAME}"
    expression: "{Template Docker:docker.container.existing.dns.resolution.failed.min(#3)}>0"
    url: "https://github.com/openshift/ops-sop/blob/master/v3/alerts/check_existing_docker_dns.asciidoc"
    priority: average

  - name: "Docker storage is using LOOPBACK on {HOST.NAME}"
    expression: "{Template Docker:docker.storage.is_loopback.last()}<>0"
    url: "https://github.com/openshift/ops-sop/blob/master/v3/alerts/check_docker_loopback.asciidoc"
    priority: high

  # The storage checks run every 10 minutes. Trigering on two item values
  # means pages will begin after 30 minutes same as the previous interval
  # of 10 minutes.
  - name: "Critically low docker storage data space on {HOST.NAME}"
    expression: "{Template Docker:docker.storage.data.space.percent_available.max(#2)}<5 or {Template Docker:docker.storage.data.space.available.max(#2)}<5" # < 5% or < 5GB
    url: "https://github.com/openshift/ops-sop/blob/master/v3/alerts/check_docker_storage.asciidoc"
    priority: high

  - name: "[Heal] Critically High Memory usage of  docker  on {HOST.NAME}"
    expression: "{Template Docker:docker.memoryusage.rss.last()}>10737418240"
    url: "https://github.com/openshift/ops-sop/blob/master/v3/alerts/check_docker_memoryusage.asciidoc"
    priority: high

  - name: "High Memory usage of  docker  on {HOST.NAME}"
    expression: "{Template Docker:docker.memoryusage.rss.last()}>6442450944"
    url: "https://github.com/openshift/ops-sop/blob/master/v3/alerts/check_docker_memoryusage.asciidoc"
    dependencies:
    - "[Heal] Critically High Memory usage of  docker  on {HOST.NAME}"
    priority: average

  - name: "Critically low docker storage metadata space on {HOST.NAME}"
    expression: "{Template Docker:docker.storage.metadata.space.percent_available.max(#2)}<5 or {Template Docker:docker.storage.metadata.space.available.max(#2)}<0.005" # < 5% or < 5MB
    url: "https://github.com/openshift/ops-sop/blob/master/v3/alerts/check_docker_storage.asciidoc"
    priority: high

  # Put triggers that depend on other triggers here (deps must be created first)
  - name: "Low docker storage data space on {HOST.NAME}"
    expression: "{Template Docker:docker.storage.data.space.percent_available.max(#2)}<10 or {Template Docker:docker.storage.data.space.available.max(#2)}<10" # < 10% or < 10GB
    url: "https://github.com/openshift/ops-sop/blob/master/v3/alerts/check_docker_storage.asciidoc"
    dependencies:
    - "Critically low docker storage data space on {HOST.NAME}"
    priority: average

  - name: "Low docker storage metadata space on {HOST.NAME}"
    expression: "{Template Docker:docker.storage.metadata.space.percent_available.max(#2)}<10 or {Template Docker:docker.storage.metadata.space.available.max(#2)}<0.01" # < 10% or < 10MB
    url: "https://github.com/openshift/ops-sop/blob/master/v3/alerts/check_docker_storage.asciidoc"
    dependencies:
    - "Critically low docker storage metadata space on {HOST.NAME}"
    priority: average

  zdiscoveryrules:
  - name: disc.docker.container
    key: disc.docker.container
    lifetime: 1
    description: "Dynamically register docker container metrics"

  zitemprototypes:
  - discoveryrule_key: disc.docker.container
    name: "{% raw %}disc.docker.container.cpu.used_pct[{{ '{#' }}CTR_NAME}]{% endraw %}"
    key: "{% raw %}disc.docker.container.cpu.used_pct[{{ '{#' }}CTR_NAME}]{% endraw %}"
    value_type: float
    units: "%"
    description: "Amount of CPU used by the container"
    history: 14
    applications:
    - Docker Container

  - discoveryrule_key: disc.docker.container
    name: "{% raw %}disc.docker.container.mem.used[{{ '{#' }}CTR_NAME}]{% endraw %}"
    key: "{% raw %}disc.docker.container.mem.used[{{ '{#' }}CTR_NAME}]{% endraw %}"
    value_type: int
    units: B
    description: "Amount of Memory used by the container"
    history: 14
    applications:
    - Docker Container

  - discoveryrule_key: disc.docker.container
    name: "{% raw %}disc.docker.container.mem.limit[{{ '{#' }}CTR_NAME}]{% endraw %}"
    key: "{% raw %}disc.docker.container.mem.limit[{{ '{#' }}CTR_NAME}]{% endraw %}"
    value_type: int
    units: B
    description: "Amount of Memory the container is allowed to use"
    history: 14
    applications:
    - Docker Container

  - discoveryrule_key: disc.docker.container
    name: "{% raw %}disc.docker.container.mem.limit_used_pct[{{ '{#' }}CTR_NAME}]{% endraw %}"
    key: "{% raw %}disc.docker.container.mem.limit_used_pct[{{ '{#' }}CTR_NAME}]{% endraw %}"
    value_type: float
    units: "%"
    description: "The percentage of memory used of the container's limit."
    history: 14
    applications:
    - Docker Container

  - discoveryrule_key: disc.docker.container
    name: "{% raw %}disc.docker.container.mem.failcnt[{{ '{#' }}CTR_NAME}]{% endraw %}"
    key: "{% raw %}disc.docker.container.mem.failcnt[{{ '{#' }}CTR_NAME}]{% endraw %}"
    value_type: int
    description: "The number of times the container has tried to allocated memory and failed"
    history: 14
    applications:
    - Docker Container
