---
- fail:
    msg: "This playbook requires {{item}} to be set."
  when: "{{ item }} is not defined or {{ item }} == ''"
  with_items:
  - osohm_zagg_web_url
  - osohm_host_monitoring
  - osohm_docker_registry_url
  - osohm_default_zagg_server_user
  - osohm_default_zagg_server_password
  - osohm_zagg_web_url
  - osohm_zagg_verify_ssl

- name: create /etc/docker/ops
  file:
    path: /etc/docker/ops
    state: directory
    mode: 0770
    group: root
    owner: root

- name: Copy dockercfg to /etc/docker/ops
  template:
      src: docker-registry.ops.cfg.j2
      dest: /etc/docker/ops/.dockercfg
      owner: root
      group: root
      mode: 0600

- name: Create empty selinux dir for monitoring
  file:
    state: directory
    dest: /var/lib/docker/volumes-ops/oso-rhel7-host-monitoring/empty_selinux
    serole: object_r
    setype: docker_var_lib_t
    seuser: system_u
    recurse: True

- name: create /etc/openshift_tools
  file:
    path: /etc/openshift_tools
    state: directory
    mode: 0775
    group: root
    owner: root

- name: "Copy monitoring container config file"
  template:
    src: monitoring-config.yml.j2
    dest: /etc/openshift_tools/monitoring-config.yml
    owner: root
    group: root
    mode: 0644
  notify:
  - "Restart the host monitoring service"

- name: "Copy etcd metrics config file"
  copy:
    src: etcd_metrics.yml
    dest: /etc/openshift_tools/etcd_metrics.yml
    owner: root
    group: root
    mode: 0644
  notify:
  - "Restart the host monitoring service"

- name: "Copy container metrics config file"
  copy:
    src: container_metrics_config.yml
    dest: /etc/openshift_tools/container_metrics_config.yml
    owner: root
    group: root
    mode: 0644
  notify:
  - "Restart the host monitoring service"

- name: "Copy {{ osohm_host_monitoring }} systemd file"
  template:
    src: "{{ osohm_host_monitoring }}.service.j2"
    dest: "/etc/systemd/system/{{ osohm_host_monitoring }}.service"
    owner: root
    group: root
    mode: 0644
  notify:
  - "Restart the host monitoring service"
  register: systemd_host_monitoring

- name: reload systemd
  command: /usr/bin/systemctl --system daemon-reload
  when: systemd_host_monitoring | changed

- name: "Start the {{ osohm_host_monitoring }} service"
  service:
    name: "{{ osohm_host_monitoring }}"
    state: "{{ osohm_service_state }}"
    enabled: "{{ osohm_service_enabled }}"
