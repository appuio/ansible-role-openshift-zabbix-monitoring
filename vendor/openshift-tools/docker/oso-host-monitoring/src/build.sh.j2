#!/bin/bash
{{ generated_header }}

# Make sure the script exits on first error
set -e

RED="$(echo -e '\033[1;31m')"
NORM="$(echo -e '\033[0m')"

function handle_err() {
  echo -e "\n${RED}ERROR: build script failed.${NORM}\n"
}

trap handle_err ERR

function handle_cleanup() {
  echo -n "Removing the fingerprint... "
  [ -f ${container_fingerprint} ] && rm -f "${container_fingerprint}"
  echo "Done."
}

trap handle_cleanup  INT TERM EXIT

sudo echo -e "\nTesting sudo works...\n"

# We MUST be in the same directory as this script for the build to work properly
cd $(dirname $0)

# generate container fingerprint (user/location/timestamp/git information)
container_fingerprint='./container-build-env-fingerprint.output'
./container-build-env-fingerprint.sh > ${container_fingerprint}

# Build ourselves
echo
echo "Building oso-{{ base_os }}-host-monitoring..."
{% if base_os == "rhel7" %}
sudo time docker build $@ -t oso-rhel7-host-monitoring .
{% elif base_os == "centos7" %}
sudo time docker build $@ -t oso-centos7-host-monitoring .
sudo docker tag oso-centos7-host-monitoring openshifttools/oso-centos7-host-monitoring:latest
{% endif %}
