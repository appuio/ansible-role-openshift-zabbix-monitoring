<?php

$config = array(
    // Note: we need the full URL here so that simpleSAML doesn't try
    // to construct it on its own. It'll end up with
    // https://example.com:8443/ since it knows that its Apache HTTPD
    // is listening on 8443, but it doesn't know that it's being front-ended
    // by the OpenShift router.
    'baseurlpath' => 'https://{{saml2_sso_configdata.hostname}}/saml/',
    'certdir' => '{{saml2_sso_configdata.certdir}}',
    'loggingdir' => '/var/log/simplesaml/',
    'datadir' => 'data/',
    'tempdir' => '/tmp/simplesaml',
    // This is a value added only for the SSH endpoint of the authorizeyaml module
    // since it doesn't know what host it's running on. This field is not part of
    // simpleSAMLphp
    'server.hostname' => '{{saml2_sso_configdata.hostname}}',
    // we keep these three off for security reasons since the errors could
    // leak info useful to an attacker. They can be turned on in a pod
    // if necessary for temporary debugging.
    'debug' => false,
    'showerrors' => false,
    'errorreporting' => false,
    'debug.validatexml' => false,
    // This should be disabled everywhere, but we set a good password just
    // in case something tries to use it.
    'auth.adminpassword' => '{{saml2_sso_configdata.auth_adminpassword}}',
    'admin.protectindexpage' => true,
    'admin.protectmetadata' => true,
    // This needs to be randomly-generated and unique for each IdP instance
    'secretsalt' => '{{saml2_sso_configdata.secretsalt}}',
    'technicalcontact_name' => '{{saml2_sso_configdata.adminname}}',
    'technicalcontact_email' => '{{saml2_sso_configdata.adminemail}}',
    'timezone' => '{{saml2_sso_configdata.timezone}}',
    'logging.level' => SimpleSAML_Logger::NOTICE,
    'logging.handler' => 'file',
    'logging.facility' => defined('LOG_LOCAL5') ? constant('LOG_LOCAL5') : LOG_USER,
    'logging.processname' => 'simplesamlphp',
    'logging.logfile' => 'simplesamlphp.log',
    'statistics.out' => array(),
    'enable.saml20-idp' => true,
    'enable.shib13-idp' => false,
    'enable.adfs-idp' => false,
    'enable.wsfed-sp' => false,
    'enable.authmemcookie' => false,
    'session.duration' => 8 * (60 * 60), // 8 hours.
    'session.datastore.timeout' => (4 * 60 * 60), // 4 hours
    'session.state.timeout' => (60 * 60), // 1 hour
    'session.cookie.name' => '{{saml2_sso_configdata.cookiename}}',
    'session.cookie.lifetime' => 0,
    'session.cookie.path' => '/',
    'session.cookie.domain' => null,
    'session.cookie.secure' => true,
    'enable.http_post' => false,
    'session.phpsession.cookiename' => null,
    'session.phpsession.savepath' => null,
    'session.save_path' => '/var/lib/php/session',
    'session.phpsession.httponly' => true,
    'session.authtoken.cookiename' => 'SimpleSAMLAuthToken',
    'session.rememberme.enable' => false,
    'session.rememberme.checked' => false,
    'session.rememberme.lifetime' => (14 * 86400),
    'language.available' => array( 'en' ),
    'language.rtl' => array(),
    'language.default' => 'en',
    'language.parameter.name' => 'language',
    'language.parameter.setcookie' => true,
    'language.cookie.name' => 'language',
    'language.cookie.domain' => null,
    'language.cookie.path' => '/',
    'language.cookie.lifetime' => (60 * 60 * 24 * 900),
    'attributes.extradictionary' => null,
    'theme.use' => '{{ saml2_sso_configdata.theme | default("default") }}',
    'default-wsfed-idp' => 'urn:federation:pingfederate:localhost',
    'idpdisco.enableremember' => true,
    'idpdisco.rememberchecked' => true,
    'idpdisco.validate' => true,
    'idpdisco.extDiscoveryStorage' => null,
    'idpdisco.layout' => 'dropdown',
    'shib13.signresponse' => true,
    'authproc.idp' => array(
        30 => 'core:LanguageAdaptor',
        45 => array(
            'class'         => 'core:StatisticsWithAttribute',
            'attributename' => 'realm',
            'type'          => 'saml20-idp-SSO',
        ),
        50 => 'core:AttributeLimit',
        99 => 'core:LanguageAdaptor',
    ),
    'authproc.sp' => array(
        90 => 'core:LanguageAdaptor',
    ),
    'metadata.sources' => array(
        array('type' => 'flatfile'),
    ),
    'store.type'                    => '{{ saml2_sso_configdata.session_store_type | default("phpsession") }}',
    'memcache_store.servers' => array(
{% for servers in saml2_sso_configdata.memcached_servers | default( [ [ 'localhost' ] ]) %}
        array(
{% for server in servers %}
            array('hostname' => '{{ server }}'),
{% endfor %}
        ),
{% endfor %}
    ),
    'memcache_store.prefix' => '{{ saml2_sso_configdata.memcache_store_prefix | default("") }}',
    'memcache_store.expires' => 36 * (60 * 60), // 36 hours.
    'metadata.sign.enable' => false,
    'metadata.sign.privatekey' => null,
    'metadata.sign.privatekey_pass' => null,
    'metadata.sign.certificate' => null,
    'proxy' => null,
    'trusted.url.domains' => array(),
);
